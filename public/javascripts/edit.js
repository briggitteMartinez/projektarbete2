// N√§r sidan √§r helt laddad k√∂rs koden inuti denna funktion
document.addEventListener("DOMContentLoaded", () => {
  const editButtons = document.querySelectorAll(".edit-btn"); // H√§mta alla "Edit"-knappar
  const saveButtons = document.querySelectorAll(".save-btn"); // H√§mta alla "Save"-knappar
  const deleteButtons = document.querySelectorAll(".delete-btn"); // H√§mta alla "Delete"-knappar

  // Loopar igenom alla "Edit"-knappar och l√§gger till klickh√§ndelser
  editButtons.forEach((btn, index) => {
    btn.addEventListener("click", () => {
      alert(
        "‚ö†Ô∏è You are about to edit this row. Make sure to save your changes!"
      );
      const row = btn.closest("tr"); // Hitta raden (tr) som knappen finns i
      const inputs = row.querySelectorAll("input"); // H√§mta alla input-f√§lt i raden

      inputs.forEach((input) => {
        // G√∂r alla input-f√§lt redigerbara genom att ta bort "readonly"
        input.removeAttribute("readonly");
        input.classList.add("hover:bg-gray-200");
      });

      btn.classList.add("hidden"); // D√∂lj "Edit"-knappen
      saveButtons[index].classList.remove("hidden"); // Visa motsvarande "Save"-knapp
    });
  });

  // Loopar igenom alla "Save"-knappar och l√§gger till klickh√§ndelser
  saveButtons.forEach((btn, index) => {
    btn.addEventListener("click", (e) => {
      e.preventDefault(); // F√∂rhindra formul√§ret fr√•n att skickas direkt
      const row = btn.closest("tr"); // Hitta raden (tr) som knappen finns i
      const inputs = row.querySelectorAll("input"); // H√§mta alla input-f√§lt i raden
      const id = row.getAttribute("data-id"); // H√§mta produktens ID fr√•n <tr>

      // H√§mta uppdaterade v√§rden fr√•n input-f√§lten
      const productName = inputs[0].value;
      const category = inputs[1].value;
      const color = inputs[2].value;
      const price = inputs[3].value;
      console.log("Saving:", { productName, category, color, price }); // Debugging

      // Skicka PUT-f√∂rfr√•gan till API:et f√∂r att uppdatera databasen
      fetch(`/api/edit/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          productName,
          category,
          color,
          price,
        }),
      })
        .then((response) => {
          if (!response.ok) {
            return response.json().then((error) => {
              throw new Error(error.message);
            });
          }
          return response.json();
        })
        .then((data) => {
          alert("‚úÖ Changes have been saved successfully!"); // Visa en alert n√§r √§ndringarna har sparats
          console.log("Updated product:", data);
        })
        .catch((error) => {
          alert("‚ùå Error: " + error.message);
          console.error("Update failed:", error);
        });

      inputs.forEach((input) => {
        // G√∂r input-f√§lten skrivskyddade igen
        input.setAttribute("readonly", true);
      });
      btn.classList.add("hidden"); // D√∂lj "Save"-knappen och visa "Edit"-knappen igen
      editButtons[index].classList.remove("hidden");
    });
  });

  deleteButtons.forEach((btn) => {
    btn.addEventListener("click", (e) => {
      e.preventDefault();

      const row = btn.closest("tr"); // Hitta raden (tr) som knappen finns i
      const id = row.getAttribute("data-id"); // H√§mta produktens ID

      if (!confirm("‚ö†Ô∏è Are you sure you want to delete this product? This action cannot be undone!")) {
        return; // Avbryt om anv√§ndaren v√§ljer "Nej"
      }

      // Skicka DELETE-f√∂rfr√•gan till servern
      fetch(`/api/edit/${id}`, {
        method: "DELETE",
      })
        .then((response) => {
          if (!response.ok) {
            return response.json().then((error) => {
              throw new Error(error.message);
            });
          }
          return response.json();
        })
        .then(() => {
          alert("üóë Product deleted successfully!");
          row.remove(); // Ta bort raden fr√•n tabellen i frontend
        })
        .catch((error) => {
          alert("‚ùå Error: " + error.message);
          console.error("Delete failed:", error);
        });
    });
  });
});
